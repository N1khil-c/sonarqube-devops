name: Pyhton CI/CD with Maven

env:
  project_id: db-cicdpipeline-wave-3
on:
  push:
    branches:
      - main
      - sonarqube-integration
  workflow_dispatch:
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  BuildMaven:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3
      - name: Auth Google cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.GIT_HUB__CICD_PROVIDE }}
          service_account: ${{ secrets.garage_service_account }}
          
      - name: Run terraform init
        run: |
          terraform init
      - name: Run terraform plan -destroy
        run: |
          terraform plan 
      - name: Run terraform apply
        run: |
          terraform apply -auto-approve

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
            python-version: 3.x

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Test with pytest
        run: |
          pytest	--junitxml=coverage.xml 
          py.test --cov-report term --cov-report xml:coverage.xml --cov=/src/test/test_area.py
    

      - name: publish unit test report
        uses: actions/upload-artifact@v2
        with:
          path: /home/runner/work/wave3-cicd-pipe/wave3-cicd-pipe/coverage.xml
          name: coverage.xml
    
      - name: Build and Package
        run: |
          mvn clean package
          ls -lart target/*

      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      
      - name: publish artifact
        uses: actions/upload-artifact@v2
        with:
            path: target/*.zip
            name: Devops.zip

      - name: Deploy to GCS
        run: |
          gsutil cp -r $GITHUB_WORKSPACE/src/main/area.py gs://asia-south2-composer-enviro-719fa6a7-bucket/dags
        #run: |
        #  gsutil cp -r $GITHUB_WORKSPACE/src/main/area.py gs://db-cicd-wave3

